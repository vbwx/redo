#!/bin/bash

set -eu
shopt -s nullglob
IFS=$'\t\n'

function recurse {
	declare -x INDEX=0 COUNT=$#
	((DEPTH)) || RCOUNT=$#

	for d in "$@"; do
		((DEPTH)) || ((RINDEX++))
		((INDEX++))
		d="${d%/}"
		if ! [[ -d $d ]]; then
			echo "redo: ${CWD:+$CWD/}$d: no such directory" >&2
			continue
		fi
		if ! [[ -x $d && -r $d ]]; then
			echo "redo: ${CWD:+$CWD/}$d: permission denied" >&2
			continue
		fi
		((nocwd)) || cd "$d"
		((DEPTH++))
		((RUNS++))

		if ((${#indir[@]})); then
			if ((nocwd)); then
				dirs=(${indir[@]/#/$d/})
			else
				dirs=(${indir[@]})
			fi
		else
			if ((nocwd)); then
				dirs=("$d"/*/)
			else
				dirs=(*/)
			fi
		fi
		if ((${#exdir[@]})); then
			if ((nocwd)); then
				exclude=(${exdir[@]/#/$d/})
			else
				exclude=(${exdir[@]})
			fi
			count=${#dirs[@]}
			for e in ${exclude[@]}; do
				i=0
				while [ $i -lt $count ]; do
					if [[ ${dirs[i]%/} == ${e%/} ]]; then
						unset 'dirs[i]'
						break
					fi
					((i++))
				done
			done
		fi

		DIR="$d"
		((nocwd)) || CWD="${PWD#*$ROOT/}"
		err=0
		"$script" || err=$?
		if ((err)); then
			((strict)) && exit $err
			((quiet)) || echo "redo: error $?" >&2
		fi
		((${#dirs[@]})) && recurse "${dirs[@]}"
		((DEPTH--))
		((nocwd)) || cd ..
	done
}

if [[ ${1-} == "--help" ]]; then
	cat <<-'EOF'
		usage: redo [--quiet | --strict] [--nocwd] [+include_glob ...] [-exclude_glob ...] [dir ...] < script
		variables: $DIR, $CWD, $COUNT, $INDEX, $DEPTH, $RUNS
		           $ROOT, $RCOUNT, $RINDEX
	EOF
	exit
fi
if [[ ${1-} == "--version" ]]; then
	echo "redo 1.3.1"
	echo "Copyright 2017-2019 Bernhard Waldbrunner"
	exit
fi

indir=()
exdir=()
dirs=()
nocwd=0
strict=0
quiet=0
export DIR CWD RCOUNT RINDEX=0 DEPTH=0 RUNS=0 ROOT="$PWD"

for arg in "$@"; do
	if [[ $arg == '--nocwd' ]]; then
		nocwd=1
		CWD="."
	elif [[ $arg == '--strict' ]]; then
		strict=1
	elif [[ $arg == '--quiet' ]]; then
		quiet=1
	elif [[ ${arg:0:1} == '-' ]]; then
		exdir[${#exdir[@]}]="${arg:1}"
	elif [[ ${arg:0:1} == '+' ]]; then
		indir[${#indir[@]}]="${arg:1}"
	else
		dirs[${#dirs[@]}]="$arg"
	fi
done

((${#dirs[@]})) || dirs=(*/)

if ((${#dirs[@]})); then
	script=$(mktemp -t redo)
	read -r line
	[[ ${line:0:2} == '#!' ]] || printf "#!%s\n" "$SHELL" > "$script"
	printf "%s\n" "$line" >> "$script"
	cat >> "$script"
	echo true >> "$script"
	chmod +x "$script"
	recurse "${dirs[@]}"
	rm -f "$script"
fi
